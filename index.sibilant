(var plugin-info
     {description: "read kindle highlights"
      kindle_url: "https://read.amazon.com/notebook"
      default_output_directory: "kindle" 
      default_output_filename: "highlights.yml"})

(var fs (require 'fs)
     path (require 'path)
     sibilant (require "sibilant")
     m (require "mithril")
     m-prop (require "mithril/stream"))

(when (= (typeof m-miccup) "undefined")
      (var m-miccup (get
                     (require
                      (path.join
                       __dirname
                       ".."
                       "src/wksymsib/src/miccup.js"))
                     'm-miccup)))

(var kindle-highlights-current-book-exec-string
     (|> (path.join
          __dirname
          ".."
          "plugin/hyperbloviate-kindle-highlights/kindle-interop.js")
         (fs.readFileSync "utf-8")))

(def ensure-file-dir! (filepath)
     (var file-dir (path.dirname filepath))
     (when (not (fs.existsSync file-dir))
           (fs.mkdirSync file-dir)))

;; read kindle highlights
(def get-highlights-for-current-book (callback)
     (|> (getWebview)
         (execJs
          kindle-highlights-current-book-exec-string
          callback)))

(def save-yaml-to-file! (data output-filepath)
     (ensure-file-dir! output-filepath)
     (fs.writeFile
      output-filepath
      (jsyaml.safeDump data)
      (#(err)
        (when err
              (console.error "FAIL" err)))))

(def get-default-output-filepath ()
     (path.join
      (get plugin-info
           "default_output_directory")
      (get plugin-info
           "default_output_filename")))

(def start-plugin! (control-element view-element)
     (var output-filepath (m-prop (get-default-output-filepath))
          status-text (m-prop "")
          current-data (m-prop null))

     (m.mount
      control-element
      {view: (#> (m-miccup
                  ["div"
                   {style: {display: "flex"
                            height: "100%"
                            flexDirection: "column"
                            fontSize: "8pt"
                            fontFamily: "Consolas, Inconsolata, Monaco, Ubuntu, Monospace"
                            }}
                   ["span" "save to file:"]
                   ["input"
                    {type: "text"
                     style: {width: "100%"}
                     value: (output-filepath)
                     onchange: (#(evt)
                                 (output-filepath (get evt 'target 'value)))}]
                   ["div"
                    ["button"
                     {onclick: (#> (get-highlights-for-current-book
                                    (#(js-out)
                                      (current-data js-out)
                                      (var asin (get js-out "asin"))
                                      (output-filepath
                                       (path.join
                                        (get plugin-info
                                             "default_output_directory")
                                        (+ asin ".yml")))
                                      (status-text
                                       (+ "loaded "
                                          (get js-out "highlights" "length")
                                          " highlights from "
                                          (get js-out "title")
                                          " (" asin ")"))
                                      (m.redraw))))}
                     "load highlights"]
                    ["button"
                     {onclick: (#>
                                (console.debug "save to file:" (output-filepath))
                                (var filepath (output-filepath)
                                     cur-data (current-data))
                                (when (= filepath.length 0)
                                      (assign filepath
                                              (get-default-output-filepath)))
                                (var show-message!
                                     (#(data)
                                       (status-text
                                        (+ "saved "
                                           (get data "highlights" "length")
                                           " highlights to "
                                           (output-filepath)))
                                       (m.redraw))
                                     
                                     do-save!
                                     (if (not cur-data)
                                         (#> (get-highlights-for-current-book
                                              (#(data)
                                                (save-yaml-to-file!
                                                 data filepath)
                                                (show-message! data))))
                                         (#> (save-yaml-to-file!
                                              cur-data filepath)
                                             (show-message! cur-data))))
                                (do-save!))}
                     "save notes file"]]
                   ["textarea"
                    {style: {width: "100%"
                             boxSizing: "border-box"
                             flex: 1}}
                    (when (current-data)
                          (|> (current-data)
                              (JSON.stringify null 2)))]
                   ["div"
                    {style: {color: "brown"}}
                    (status-text)]]))})
     
     (m.mount
      view-element
      {oncreate: (#(vnode)
                   (var dom-node (get vnode "dom"))
                   ;; important -- needed for JS interaction
                   (dom-node.addEventListener
                    "did-finish-load"
                    (#> (Hyperbloviate.bindWebviewInterop dom-node))))
       view: (#> (m-miccup ["webview"
                            {src: (get plugin-info "kindle_url")
                             allowRunningInsecureContent: true
                             preload: "webview_preload.js"}]))}))

(set exports
     'info plugin-info
     'start start-plugin!)
